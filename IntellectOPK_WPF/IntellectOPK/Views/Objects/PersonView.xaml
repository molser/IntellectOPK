<Window x:Class="IntellectOPK.Views.PersonView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:IntellectOPK.Views"
        xmlns:molser="clr-namespace:MolserLib.Controls;assembly=MolserLib"
        mc:Ignorable="d"
        xmlns:v="clr-namespace:IntellectOPK.ValidationRules"
        xmlns:conv="clr-namespace:IntellectOPK.Converters" 
        Title="{Binding Title}" Height="530" Width="640" SizeToContent="Width"
        Style="{StaticResource VS2012WindowStyle}"
        ResizeMode="CanResizeWithGrip">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="boolToUIVisibilityConverter" />
        <conv:NullToVisibilityConverter x:Key="nullToVisibilityConverter"/>
        <conv:BoolToBoolInverseConverter x:Key="inverseBooleanConverter" />
        <conv:AsyncImageConverter x:Key="asyncImageConverter" />
        <conv:DataBaseIconVisibilityConverter x:Key="dataBaseIconVisibilityConverter" />
        <conv:DateToStringConverter x:Key="dateToStringConverter" />
        <!--<conv:AsyncLevelsConverter x:Key="asyncLevelsConverter"/>-->
        <conv:BoolToUIVisibilityMultiConverter x:Key="boolToUIVisibilityMultiConverter"/>
    </Window.Resources>
   
    <DockPanel>
        <Grid DockPanel.Dock="Bottom" Margin="0,10,15,10">
            <StackPanel
                Orientation="Horizontal" 
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom">
                <Button Height="26" Width="60" VerticalAlignment="Top" HorizontalAlignment="Left" Content="OK"
                        Command="{Binding ConfirmCommand}" IsEnabled="False">
                </Button>
                <Button  VerticalAlignment="Top" HorizontalAlignment="Left" IsCancel="True" Click="ButtonCancel_Click"  Content="Отмена" Margin="10,0,0,0" Height="26" Width="60"/>
            </StackPanel>
        </Grid>

        <Grid DockPanel.Dock="Left" Margin="20,0,20,0">
            <Grid.RowDefinitions>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <!--<ColumnDefinition Width="Auto" />-->
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition MinWidth="20" Width="auto"/>
                <!--<ColumnDefinition MinWidth="20" Name="extendedDataColumnDefinition">
                    <ColumnDefinition.Style>
                        <Style>
                            <Setter Property="ColumnDefinition.Width" Value="20"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsExpanded, ElementName=extendedDataExpander}" Value="True">
                                    <Setter Property="ColumnDefinition.Width" Value="400"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ColumnDefinition.Style>
                </ColumnDefinition>-->
                <!--<ColumnDefinition Width="auto"/>-->
                <ColumnDefinition MinWidth="20" Width="auto"/>
                <!--<ColumnDefinition MinWidth="20" Name="historyColumnDefinition">
                    <ColumnDefinition.Style>
                        <Style>
                            <Setter Property="ColumnDefinition.Width" Value="20"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsExpanded, ElementName=historyExpander}" Value="True">
                                    <Setter Property="ColumnDefinition.Width" Value="250"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ColumnDefinition.Style>
                </ColumnDefinition>-->
            </Grid.ColumnDefinitions>
            <!--<Grid.Triggers>
                
            </Grid.Triggers>-->

            <Grid Grid.Row="0" Grid.Column="0"
                  HorizontalAlignment="Left">
                <!--<TextBlock Text="Фото:"/>-->
                <Viewbox Stretch="Uniform" VerticalAlignment="Top">
                    <Canvas Width="81" Height="108" Name="photoCanvas">
                        <ContentControl 
                            Content="{StaticResource PersonPath}" 
                            Foreground="{StaticResource PersonPathBrush}" 
                            Canvas.Bottom="0" 
                            Width="81">
                            <ContentControl.Style>
                                <Style TargetType="ContentControl">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding PersonPhoto}"  Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                        <Grid Width="{Binding ActualWidth, ElementName=photoCanvas}" 
                                        Height="{Binding ActualHeight, ElementName=photoCanvas}">
                            <Label
                                        FontSize="5"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center" 
                                        Foreground="Red"
                                        Content="ошибка"
                                        Visibility="{Binding PersonPhotoSetter.IsFaulted, Converter={StaticResource bool2VisibilityConverter}}"/>
                            <molser:MolserWait     
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center"
                                        Width="16"
                                        Height="16"
                                        Margin="0,0,0,0" 
                                        Visibility="{Binding PersonPhotoSetter.IsNotCompleted,  Converter={StaticResource bool2VisibilityConverter}}"/>
                            <Viewbox Width="81">
                                <Image HorizontalAlignment="Center"
                                    VerticalAlignment="Bottom"
                                    Source="{Binding PersonPhoto}"/>
                            </Viewbox>
                            <Viewbox Height="7" 
                                HorizontalAlignment="Left" VerticalAlignment="Bottom"
                                Visibility="{Binding Person, Converter={StaticResource dataBaseIconVisibilityConverter}}"
                                ToolTip="Данные из дополнительной базы данных">
                                <Border Background="White" Padding="2">
                                    <ContentControl Content="{StaticResource DataBasePath}" Foreground="Orange"/>
                                </Border>
                            </Viewbox>
                        </Grid>
                    </Canvas>
                </Viewbox>
            </Grid>
            <!--<GridSplitter Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Width="10"
                      VerticalAlignment="Stretch" 
                      HorizontalAlignment="Center"
                      Margin="10,0,0,0">
                <GridSplitter.Style>
                    <Style TargetType="GridSplitter">
                        <Setter Property="Background" Value="Transparent"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </GridSplitter.Style>
            </GridSplitter>-->
            <Grid Grid.Row="0" Grid.Column="1" Margin="20,0,0,0"
                  HorizontalAlignment="Left">
                <StackPanel Orientation="Vertical" >
                    <TextBlock Text="Фамилия:"/>
                    <TextBox 
                            Name="PersonName"
                            HorizontalAlignment="Stretch"    
                            Margin="0,0,0,2" TextWrapping="NoWrap"
                            IsReadOnly="True"
                            Text="{Binding Path=Person.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                    </TextBox>
                    <TextBlock Text="Имя:"/>
                    <TextBox 
                            Name="Surname"                            
                            Margin="0,0,0,2" TextWrapping="NoWrap"
                            IsReadOnly="True"
                            Text="{Binding Path=Person.Surname, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                    </TextBox>
                    <TextBlock Text="Отчество:"/>
                    <TextBox 
                            Name="Patronimic" 
                            TextWrapping="NoWrap"
                            Margin="0,0,0,2"
                            IsReadOnly="True"
                            Text="{Binding Path=Person.Patronymic, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                    </TextBox>
                    <TextBlock Text="Должность:"/>
                    <TextBox 
                            Name="Post" 
                            TextWrapping="NoWrap"
                            Margin="0,0,0,2"
                            IsReadOnly="True"
                            Text="{Binding Path=Person.Post, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                    </TextBox>
                    <TextBlock Text="Отдел:"/>
                    <TextBox 
                            Name="Department" 
                            TextWrapping="NoWrap"
                            Margin="0,0,0,2"
                            IsReadOnly="True"
                            Text="{Binding Path=Person.Department, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                    </TextBox>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <Label Content="ID:"/>
                        <molser:MsTextBox 
                            Name="ID" 
                            TextWrapping="Wrap"
                            Width="80"
                            Height="22"
                            Margin="2,0,0,0"
                            IsReadOnly="True"
                            Text="{Binding Path=Person.Id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                        </molser:MsTextBox>                        
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <Button 
                            HorizontalAlignment="Left"
                            Width="40"
                            Command="{Binding ExportPersonPhotoCommand}"
                            Visibility="{Binding AppUserPermissions[ExportData], Converter={StaticResource boolToUIVisibilityConverter}}"
                            ToolTip="Экспорт фото">
                            <Button.Content>
                                <ContentControl Width="26" Height="26" Content="{StaticResource ExportPhotoViewbox}"/>
                            </Button.Content>
                        </Button>
                        <Button Margin="5,0,0,0"
                            HorizontalAlignment="Left"
                            Width="40"
                            Command="{Binding ShowAccessPointsViewCommand}"
                            Visibility="{Binding AppUserPermissions[SeeLevels], Converter={StaticResource boolToUIVisibilityConverter}}"
                            ToolTip="Показать точки доступа">
                            <Button.Content>
                                <ContentControl Width="26" Height="24" Content="{StaticResource AccessPointViewbox}"/>
                            </Button.Content>
                        </Button>
                    </StackPanel>
                </StackPanel>
            </Grid>
            <Expander Grid.Row="0" Grid.Column="2" Margin="10,0,0,0"                      
                      Name="extendedDataExpander"
                      ExpandDirection="Right" 
                      IsExpanded="{Binding IsExtendedMode}" 
                      VerticalAlignment="Top"
                      ToolTip="Дополнительные данные"
                      Visibility="{Binding AppUserPermissions[SeePersons], Converter={StaticResource boolToUIVisibilityConverter}}"  >
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="235"/>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Orientation="Vertical">
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,2">
                           <StackPanel Orientation="Vertical">
                                <TextBlock Text="Табельный номер:"/>
                                <TextBox HorizontalAlignment="Stretch"    
                                     TextWrapping="Wrap"
                                     IsReadOnly="True"
                                     Text="{Binding Path=Person.Tabnum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                </TextBox>
                            </StackPanel>
                            <StackPanel Orientation="Vertical" Margin="10,0,0,0">
                                <TextBlock Text="Паспорт:"/>
                                <TextBox HorizontalAlignment="Stretch"    
                                 TextWrapping="Wrap"
                                 IsReadOnly="True"
                                 Text="{Binding Path=Person.Passport, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                </TextBox>
                            </StackPanel>
                            <StackPanel Orientation="Vertical" Margin="10,0,0,0">
                                <TextBlock Text="Комментарий:"/>
                                <TextBox HorizontalAlignment="Stretch"    
                                 TextWrapping="Wrap"
                                 IsReadOnly="True"
                                 Text="{Binding Path=Person.Comment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                </TextBox>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <StackPanel Orientation="Vertical">
                                <TextBlock Text="Код:"/>
                                <TextBox HorizontalAlignment="Stretch"    
                                     TextWrapping="Wrap"
                                     IsReadOnly="True"
                                     Text="{Binding Path=Person.FacilityCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                </TextBox>
                            </StackPanel>
                            <StackPanel Orientation="Vertical" Margin="5,0,0,0">
                                <TextBlock Text="Карта:"/>
                                <TextBox HorizontalAlignment="Stretch"    
                                    TextWrapping="Wrap"
                                    IsReadOnly="True"
                                    Text="{Binding Path=Person.Card, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                </TextBox>
                            </StackPanel>
                            <StackPanel Orientation="Vertical" Margin="10,0,0,0">
                                <TextBlock Text="PIN:"/>
                                <TextBox HorizontalAlignment="Stretch"    
                                     TextWrapping="Wrap"
                                     IsReadOnly="True"
                                     Text="{Binding Path=Person.Pin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                </TextBox>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10,0,0,0">
                                <StackPanel Orientation="Vertical" Margin="0,0,0,0">
                                    <TextBlock Text="Срок действия с:"/>
                                    <DatePicker IsEnabled="False">
                                        <DatePicker.SelectedDate>
                                            <Binding Mode="TwoWay" Path="Person.StartedAt" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True">
                                                <Binding.ValidationRules>
                                                    <v:DateValidationRule />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </DatePicker.SelectedDate>
                                    </DatePicker>
                                </StackPanel>
                                <StackPanel Orientation="Vertical"
                                Margin="10,0,0,0"                                   
                                    >
                                    <TextBlock Text="Срок действия по:"/>
                                    <DatePicker IsEnabled="False">
                                        <DatePicker.SelectedDate>
                                            <Binding Mode="TwoWay" Path="Person.Expired" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True">
                                                <Binding.ValidationRules>
                                                    <v:DateValidationRule />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </DatePicker.SelectedDate>
                                    </DatePicker>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                        
                        <StackPanel Orientation="Vertical" Margin="0,0,0,2">
                            <TextBlock Text="Кем выдана карта:"/>
                            <TextBox HorizontalAlignment="Stretch"    
                            TextWrapping="Wrap"
                            IsReadOnly="True"
                            Text="{Binding Path=Person.WhoCard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                            </TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Vertical" Margin="0,0,0,2">
                            <TextBlock Text="Кто присвоил УД:"/>
                            <TextBox HorizontalAlignment="Stretch"    
                             TextWrapping="Wrap"
                             IsReadOnly="True"
                             Text="{Binding Path=Person.WhoLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                            </TextBox>
                        </StackPanel>
                        <!--<StackPanel Orientation="Horizontal">
                            <StackPanel Orientation="Vertical">
                                <TextBlock Text="Дата выдачи:"/>
                                <DatePicker IsReadOnly="True">
                                    <DatePicker.SelectedDate>
                                        <Binding Mode="TwoWay" Path="Person.StartedAt" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True">
                                            <Binding.ValidationRules>
                                                <v:DateValidationRule />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </DatePicker.SelectedDate>
                                </DatePicker>
                            </StackPanel>
                            <StackPanel Orientation="Vertical">
                                <TextBlock Text="Действительна до:"/>
                                <DatePicker IsReadOnly="True">
                                    <DatePicker.SelectedDate>
                                        <Binding Mode="TwoWay" Path="Person.Expired" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True">
                                            <Binding.ValidationRules>
                                                <v:DateValidationRule />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </DatePicker.SelectedDate>
                                </DatePicker>
                            </StackPanel>
                        </StackPanel>-->
                        <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                            <CheckBox 
                                Name="IsLocked" 
                                Margin="0,0,0,0"  
                                IsEnabled="False"
                                IsChecked="{Binding Path=Person.IsLocked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                            </CheckBox>
                            <TextBlock Margin="0,0,0,0" Text=" - Заблокирован"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                            <CheckBox 
                                Margin="0,0,0,0"  
                                IsEnabled="False"
                                IsChecked="{Binding Path=Person.IsApb, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                            </CheckBox>
                            <TextBlock Margin="0,0,0,0" Text=" - Двойной проход запрещен"/>
                        </StackPanel>                        
                        <StackPanel Orientation="Vertical">
                            <!--<StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                <CheckBox 
                                Margin="0,0,0,0"  
                                IsReadOnly="True"
                                IsChecked="{Binding Path=Person.Pnet3Alarm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                </CheckBox>
                                <TextBlock Margin="0,0,0,0" Text=" - Снятие тревоги"/>
                            </StackPanel>-->
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                                <CheckBox
                                Margin="0,0,0,0"  
                                IsEnabled="False"
                                IsChecked="{Binding Path=Person.Pnet3Guard, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                </CheckBox>
                                <TextBlock Margin="0,0,0,0" Text=" - Управление охраной"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                                <CheckBox
                                Foreground="Red"
                                Margin="0,0,0,0"  
                                IsEnabled="False"
                                IsChecked="{Binding Path=Person.Pnet3Block, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                </CheckBox>
                                <TextBlock Margin="0,0,0,0" Text=" - Проход при блокировке"/>
                            </StackPanel>                            
                        </StackPanel>
                    </StackPanel>
                    <Grid Grid.Row="1" VerticalAlignment="Top" Margin="0,0,0,2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="Уровни доступа отдела:"/>
                        <ListView Grid.Row="1"  
                                Name="departmentlevelsListView"
                                SelectionMode="Single"
                                ItemsSource="{Binding Person.DepartmentLevels}"
                                Visibility="{Binding AppUserPermissions[SeeLevels], Converter={StaticResource boolToUIVisibilityConverter}}"
                                >
                            <ListView.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                </Style>
                            </ListView.Resources>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource StandardListViewItem}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Type}" Value="основной">
                                            <Setter Property="Foreground" Value="Green"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="дополнительный">
                                            <Setter Property="Foreground" Value="Crimson"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="авк">
                                            <Setter Property="Foreground" Value="Blue"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.View>
                                <GridView>
                                    <GridView.Columns>                                        
                                        <GridViewColumn Header="Название" DisplayMemberBinding="{Binding Path=Name}"/>
                                        <GridViewColumn Header="Описание" DisplayMemberBinding="{Binding Path=Description}"/>                                        
                                    </GridView.Columns>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Grid>
                    <Grid Grid.Row="2" VerticalAlignment="Top" Margin="0,0,0,2">
                        <!--DataContext="{Binding Person,  Converter={StaticResource asyncLevelsConverter}}">-->
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="Уровни доступа сотрудника:"/>
                        <ListView Grid.Row="1"  
                                Name="levelsListView"
                                SelectionMode="Single"
                                ItemsSource="{Binding Person.Levels}"
                                Visibility="{Binding AppUserPermissions[SeeLevels], Converter={StaticResource boolToUIVisibilityConverter}}"
                                >
                            <ListView.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                </Style>
                            </ListView.Resources>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource StandardListViewItem}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Type}" Value="основной">
                                            <Setter Property="Foreground" Value="Green"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="дополнительный">
                                            <Setter Property="Foreground" Value="Crimson"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="авк">
                                            <Setter Property="Foreground" Value="Blue"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ListView.ItemContainerStyle>

                            <!--<ListViewItem>
                                <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource StandardListViewItem}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Type}" Value="основной">
                                            <Setter Property="Foreground" Value="Green"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="дополнительный">
                                            <Setter Property="Foreground" Value="Crimson"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="авк">
                                            <Setter Property="Foreground" Value="Blue"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ListViewItem>-->
                        <!--<ListView.ItemTemplate>
                            <DataTemplate>
                                 <TextBlock TextTrimming="CharacterEllipsis"/>
                             </DataTemplate>
                        </ListView.ItemTemplate>-->

                            <ListView.View>
                                <GridView>
                                    <GridView.Columns>                                       
                                        <GridViewColumn Header="Название" DisplayMemberBinding="{Binding Path=Name}" />
                                        <GridViewColumn Header="Описание" DisplayMemberBinding="{Binding Path=Description}" />
                                    </GridView.Columns>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Grid>
                </Grid>
            </Expander>
            <Expander Grid.Row="0" Grid.Column="3" Margin="10,0,0,0"
                      Name="historyExpander"                      
                      ExpandDirection="Right"                       
                      IsExpanded="False" 
                      ToolTip="История изменений"
                      >
                <Expander.Visibility>
                    <MultiBinding Converter="{StaticResource boolToUIVisibilityMultiConverter}">
                        <Binding Path="AppUserPermissions[SeePersonHistory]"/>
                        <Binding Path="IsPersonHistoryAvailable"/>
                    </MultiBinding>
                </Expander.Visibility>
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Text="История изменений:"/>
                    <ListView Grid.Row="1"  
                        Name="personHistoryListView"
                        SelectionMode="Single"
                        ItemsSource="{Binding Persons}"
                        SelectedItem="{Binding Person, Mode=TwoWay}"
                        
                         >
                        <!--, NotifyOnTargetUpdated=True
                        TargetUpdated="personHistoryListView_TargetUpdated"-->
                        <!--<ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="IsSelected" Value="{Binding}"
                            </Style>
                        </ListView.ItemContainerStyle>-->
                        <ListView.View>
                            <GridView>
                                <GridView.Columns>
                                    <GridViewColumn Header="Начало" DisplayMemberBinding="{Binding Path=ValidFrom, Converter={StaticResource dateToStringConverter}}"/>
                                    <GridViewColumn Header="Окончание" DisplayMemberBinding="{Binding Path=ValidTo, Converter={StaticResource dateToStringConverter}}"/>
                                </GridView.Columns>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </Grid>
                <!--<Expander.Style>
                    <Style TargetType="Expander">
                        <Style.Triggers>
                            --><!--<DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource VS2012WindowStatusForeground}" />
                                <Setter Property="Background" Value="{StaticResource VS2012WindowBorderBrush}" />
                            </DataTrigger>-->

                            <!--<Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="HistoryRow"  Property="Height" Value="500"/>
                            </Trigger>--><!--                            
                        </Style.Triggers>
                    </Style>
                </Expander.Style>-->
            </Expander>
            
        </Grid>
    </DockPanel>
</Window>
