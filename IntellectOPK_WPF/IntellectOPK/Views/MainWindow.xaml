<Window x:Class="IntellectOPK.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:molser="clr-namespace:MolserLib.Controls;assembly=MolserLib"
        xmlns:conv="clr-namespace:IntellectOPK.Converters" 
        xmlns:v="clr-namespace:IntellectOPK.ValidationRules"
        xmlns:commands="clr-namespace:IntellectOPK.Commands"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        Title="{Binding Title}" Height="600" Width="800" Icon="..\Resources\Icons\IntellectOPK.ico"
        Style="{StaticResource VS2012WindowStyle}">
    <!--<Window.CommandBindings>
        <CommandBinding Command="commands:CustomCommands.Find" CanExecute="FindCommand_CanExecute" Executed="FindCommand_Executed" />
    </Window.CommandBindings>-->
    <Window.Resources>
        <!--<Style x:Key="_VS2012WindowStyle" TargetType="{x:Type Window}" BasedOn="{StaticResource VS2012WindowStyle}"/>
        <Style x:Key="_StandardDateTimePicker" TargetType="{x:Type xctk:DateTimePicker}" BasedOn="{StaticResource StandardDateTimePicker}"/>-->
        <BooleanToVisibilityConverter x:Key="boolToUIVisibilityConverter" />
        <conv:BoolToUIVisibilityMultiConverter x:Key="boolToUIVisibilityMultiConverter"/>
        <conv:BoolToBoolInverseConverter x:Key="boolToBoolInverseConverter" />
        <conv:BoolToBoolMultiConverter x:Key="boolToBoolMultiConverter"/>
        <conv:EmptyStringToBoolMultiConverter x:Key="emptyStringToBoolMultiConverter"/>
        <conv:NullToVisibilityConverter x:Key="nullToVisibilityConverter"/>
        <conv:NullToBoolConverter x:Key="nullToBoolConverter"/>
        <conv:AsyncImageConverter x:Key="asyncImageConverter" />
        <conv:DataBaseIconVisibilityConverter x:Key="dataBaseIconVisibilityConverter" />
        <conv:DateToStringConverter x:Key="dateToStringConverter" />
        <conv:IntToUIVisibilityConverter x:Key="intToUIVisibilityConverter" />
        <conv:IntToStringConverter x:Key="intToStringConverter" />
        <conv:StringToBoolConverter x:Key="stringToBoolConverter" />
        <conv:AlarmToProgressStateConverter x:Key="alarmToProgressStateConverter"/>
        <conv:AlarmToProgressValueConverter x:Key="alarmToProgressValueConverter"/>

        <!--<ControlTemplate x:Key="validationTemplate">
            <Border BorderBrush="Red" BorderThickness="2" >
                <AdornedElementPlaceholder/>
            </Border>
        </ControlTemplate>

        <Style TargetType="{x:Type FrameworkElement}">
            <Setter Property="Validation.ErrorTemplate" Value="{StaticResource validationTemplate}">
            </Setter>
        </Style>-->

    </Window.Resources>
    <DockPanel>
        <Menu x:Name="menu" 
              HorizontalAlignment="Left" 
              VerticalAlignment="Top" 
              Margin="0,0,0,0"
              DockPanel.Dock="Top">
            <MenuItem Header="Файл" StaysOpenOnClick="True">
                <MenuItem Header="Изменить пароль" Command="{Binding ChangePasswordCommand}"
                          Visibility="{Binding UserPermissions[ChangePassword], Converter={StaticResource boolToUIVisibilityConverter}}"/>
                <Separator/>
                <MenuItem Header="Выход" Command="{Binding CloseCommand}"/>
            </MenuItem>            
            <MenuItem Header="Инструменты" StaysOpenOnClick="True">
                <MenuItem Header="Пользователи" Command="{Binding ShowUsersViewCommand}"                           
                          Visibility="{Binding UserIsSecurityAdmin, Converter={StaticResource boolToUIVisibilityConverter}}"/>
                <MenuItem Header="Отладочное окно" Command="{Binding ShowIidkDebugViewCommand}"
                          Visibility="{Binding IsIidkDebugEnabled, Converter={StaticResource boolToUIVisibilityConverter}}"/>
                <MenuItem Header="Настройки" Command="{Binding ShowSettingsViewCommand}"/>
            </MenuItem>
            <MenuItem Header="Справка" StaysOpenOnClick="True">
                <MenuItem Header="О программе" Command="{Binding AboutCommand}"/>
            </MenuItem>
        </Menu>
        <ToolBar DockPanel.Dock="Top" Margin="0,2,0,0">
            <Button Command="{Binding RunQueryCommand}" 
                    ToolTip="Выполнить" ToolTipService.ShowOnDisabled="True" 
                    IsDefault="True"
                    Height="22">
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <ContentControl Content="{StaticResource RunCanvas}"/>
                        <TextBlock VerticalAlignment="Center">Выполнить</TextBlock>
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button Command ="{Binding CancelQueryCommand}" 
                    ToolTip="Остановить" ToolTipService.ShowOnDisabled="True" 
                    Width="26"
                    Height="22"
                   Content="{StaticResource StopCanvas}">
            </Button>
            <Separator Margin="5,0,5,0" Visibility="{Binding UserPermissions[ExportData], Converter={StaticResource boolToUIVisibilityConverter}}"/>
            <Button Command="{Binding ExportToMSExcelCommand}"
                    ToolTip="Экспортировать в MS Excel" ToolTipService.ShowOnDisabled="True"
                    Visibility="{Binding UserPermissions[ExportData], Converter={StaticResource boolToUIVisibilityConverter}}"
                    Content="{StaticResource MsExcelCanvas}">
            </Button>
            <Separator Margin="5,0,5,0" Visibility="{Binding UserPermissions[RunCardConverter], Converter={StaticResource boolToUIVisibilityConverter}}"/>
            <Button Command ="{Binding CardConverterCommand}" 
                    ToolTip="Конвертер карт" ToolTipService.ShowOnDisabled="True"                    
                   IsEnabled="{Binding IsCardConverterShowed, Converter={StaticResource boolToBoolInverseConverter}}"
                    Visibility="{Binding UserPermissions[RunCardConverter], Converter={StaticResource boolToUIVisibilityConverter}}"
                    Height="22"
                    Content="{StaticResource CardConverterCanvas}"
                    Width="40">
            </Button>
            <Separator Margin="5,0,5,0"/>
            <Button x:Name="infoButton"
                    Margin="5,0,0,0"
                    Width="30" Height="24"
                    Command="{Binding ShowInfoCommand}"
                    ToolTip="Показать дополнительную информацию">
                <Button.Content>
                    <ContentControl Height="14" Width="14"                                                        
                                    Content="{StaticResource InfoViewbox}"/>
                </Button.Content>
            </Button>
            <Button x:Name="showOnMapButton"
                Margin="5,0,0,0"
                Width="30" Height="24"
                Command="{Binding IidkShowObjectOnMapCommand}"
                ToolTip="Показать объект на карте">
                <Button.Visibility>
                    <MultiBinding Mode="OneWay" Converter="{StaticResource boolToUIVisibilityMultiConverter}">
                        <Binding Mode="OneWay" Path="IsIidkEnabled" />
                        <Binding Mode="OneWay" Path="Settings.IidkMap" Converter="{StaticResource stringToBoolConverter}"/>
                    </MultiBinding>
                </Button.Visibility>
                <Button.Content>
                    <ContentControl Height="15" Width="19"                                                        
                                    Content="{StaticResource LocationViewbox}"/>
                </Button.Content>
            </Button>
            <Button x:Name="showOnCamButton"
                    Margin="5,0,0,0"
                    Width="30" Height="24"                    
                    Command="{Binding IidkShowEventOnCamCommand}"
                    ToolTip="Показать событие на камере">
                <Button.Visibility>
                    <MultiBinding Mode="OneWay" Converter="{StaticResource boolToUIVisibilityMultiConverter}">
                        <Binding Mode="OneWay" Path="IsIidkEnabled" />
                        <Binding Mode="OneWay" Path="Settings.IidkMonitor" Converter="{StaticResource stringToBoolConverter}"/>
                    </MultiBinding>
                </Button.Visibility>
                <Button.Content>
                    <ContentControl Height="10" Width="17" Content="{StaticResource ShowOnCamViewbox}"/>
                </Button.Content>
            </Button>
        </ToolBar>
        <StatusBar DockPanel.Dock="Bottom"
                   HorizontalAlignment="Stretch"
                   VerticalAlignment="Bottom"
                   Padding="4,0,0,0"
                   Background="{StaticResource TitleBarBackgroundBrush}">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StackPanel Name="rowsCountStackPanel" Orientation="Horizontal">
                <TextBlock Text="Количество записей: " Foreground="{DynamicResource TextBoxFont}"/>
                <TextBlock Name="rowsCountTextBox" Foreground="{DynamicResource TextBoxFont}"/>
                <!--<TextBlock Name="rowCountTextBox" Text="{Binding RowCount}"/>-->
            </StackPanel>
            <StatusBarItem Grid.Column="1">
                <StackPanel Orientation="Horizontal">
                    <ToggleButton                           
                        Width="28" Margin="0,0,0,0"
                        IsChecked="{Binding Settings.IsSoundDisabled, Mode=TwoWay}"
                        Style="{StaticResource SoundToggleButton}"/>
                    <Viewbox Height="14" Opacity="0.75" Margin="5,0,0,0" VerticalAlignment="Center"
                             PreviewMouseLeftButtonDown="operDbUse_PreviewMouseLeftButtonDown">
                        <Viewbox.Style>
                            <Style TargetType="Viewbox">
                                <Setter Property="ContextMenu">
                                    <Setter.Value>
                                        <ContextMenu>
                                            <MenuItem Header="Использовать основную базу данных"
                                                    IsCheckable="True"
                                                    IsChecked="{Binding Settings.UseOperDB, Mode=TwoWay}"/>
                                        </ContextMenu>
                                    </Setter.Value>
                                </Setter>
                                <!--<Style.Triggers>
                                    <EventTrigger RoutedEvent="MouseLeftButtonDown">
                                        <EventTrigger.Actions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
                                                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
                                                    </BooleanAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger.Actions>
                                    </EventTrigger>
                                </Style.Triggers>-->
                            </Style>
                        </Viewbox.Style>
                        <ContentControl Content="{StaticResource DataBaseBorder}">                            
                            <ContentControl.Style>
                                <Style TargetType="{x:Type ContentControl}">
                                    <Setter Property="Foreground" Value="Orange"/>
                                    <Setter Property="ToolTip" Value="Используется дополнительная база данных"/>                                    
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Settings.UseOperDB}" Value="true">
                                            <Setter Property="Foreground" Value="MediumSeaGreen"/>
                                            <Setter Property="ToolTip" Value="Используется основная база данных"/>
                                        </DataTrigger>                                        
                                    </Style.Triggers>                                    
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                    </Viewbox>
                    <Viewbox x:Name="IidkViewBox" Height="14" Opacity="0.75" Margin="10,0,0,0"
                             Visibility="{Binding IsIidkEnabled, Converter={StaticResource boolToUIVisibilityConverter}, Mode=OneWay}"
                             VerticalAlignment="Center"
                             ToolTip="{Binding IidkStatus}">
                        <ContentControl Content="{StaticResource IidkViewbox}">
                            <ContentControl.Style>
                                <Style TargetType="{x:Type ContentControl}">
                                    <Setter Property="Foreground" Value="MediumSeaGreen"/>
                                    <!--<Setter Property="ToolTip" Value="Подключено к серверу Intellect"/>-->
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsIidkConnected}" Value="false">
                                            <Setter Property="Foreground" Value="Red"/>
                                            <!--<Setter Property="ToolTip" Value="Нет связи с сервером Intellect"/>-->
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                    </Viewbox>
                    <Popup x:Name="iidkDisconnected" PlacementTarget="{Binding ElementName=IidkViewBox}" Placement="Top"                           
                           StaysOpen="False">
                        <Popup.IsOpen>
                            <MultiBinding Mode="OneWay" Converter="{StaticResource boolToBoolMultiConverter}">
                                <Binding Mode="OneWay" Path="IsIidkEnabled" />
                                <Binding Mode="OneWay" Path="IsIidkConnected" Converter="{StaticResource boolToBoolInverseConverter}"/>
                            </MultiBinding>
                        </Popup.IsOpen>
                        <Border BorderBrush="SlateGray" BorderThickness="1" Background="White" Padding="4">
                            <StackPanel Orientation="Horizontal">
                                <!--<Label Background="AliceBlue" Foreground="Blue" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" MouseDown="mouse_DownHandled">
                                x
                                </Label>-->
                                <ContentControl Width="24" Height="22" Content="{StaticResource WarningViewbox}"/>
                                <Label Margin="5,0,0,0" x:Name="myLabel" Content="Нет связи с сервером Intellect!" Foreground="Black"/>
                            </StackPanel>
                        </Border>
                    </Popup>
                    <ResizeGrip Opacity="0.75"/>
                </StackPanel>
            </StatusBarItem>
            <!--<StatusBarItem HorizontalAlignment="Right">
                
            </StatusBarItem>-->
        </StatusBar>
        <TabControl  Margin="2,2,2,1" SelectionChanged="tabControl_OnSelectionChanged">
            <TabItem x:Name="AccessEvents">
                <TabItem.Header>
                    <Grid Margin="-6,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="18"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>                        
                        <molser:MolserWait Grid.Column="0" 
                                           VerticalAlignment="Bottom" 
                                           HorizontalAlignment="Left" 
                                           Margin="0,0,0,0" 
                                           Height="16" Width="16"
                                           Visibility="{Binding IsGettingAccessEvents, Converter={StaticResource  boolToUIVisibilityConverter}}"/>
                        <TextBlock Grid.Column="1" Text="События доступа"/>
                    </Grid>
                </TabItem.Header>
                <Grid  Margin="10,10,10,10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="IsEnabled" Value="True"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsGettingAccessEvents}" Value="true">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <DockPanel Grid.Row="0">
                        <DockPanel.IsEnabled>
                            <MultiBinding Converter="{StaticResource emptyStringToBoolMultiConverter}">
                                <Binding Mode="OneWay" Path="AccessEventsFilter.FacilityCod"/>
                                <Binding Mode="OneWay" Path="AccessEventsFilter.CardPartParsec"/>
                                <Binding Mode="OneWay" Path="AccessEventsFilter.PersonId"/>
                            </MultiBinding>
                        </DockPanel.IsEnabled>
                        <Button DockPanel.Dock="Right"
                                Height="24" Width="30" Margin="0,0,0,0"  
                                Command="{Binding ShowPersonsViewCommand}" 
                                CommandParameter="FromAccessEvents"
                                ToolTip="Выбрать сотрудников"
                                Content="{StaticResource PersonCanvas}">
                        </Button>
                        <Grid DockPanel.Dock="Left">
                            <molser:MsComboBox x:Name="PersonsAEF" 
                                 Grid.Row="0"
                                 Grid.Column="0"
                                 Padding="40,0,40,0"
                                 Height="24"
                                 HorizontalAlignment="Stretch"
                                 VerticalAlignment="Center"
                                 IsEditable="True" 
                                 ItemsSource="{Binding AefPersonsHistory}"
                                 Watermark="Именные компоненты сотрудников...">
                                <molser:MsComboBox.Text>
                                    <Binding Mode="TwoWay" 
                                        Path="AccessEventsFilter.Persons"
                                        UpdateSourceTrigger="PropertyChanged"
                                        NotifyOnValidationError="True"
                                        ValidatesOnExceptions="True">
                                    </Binding>
                                </molser:MsComboBox.Text>
                                <molser:MsComboBox.Style>
                                    <Style TargetType="{x:Type molser:MsComboBox}" BasedOn="{StaticResource StandardMsComboBox}">
                                        <Setter Property="ToolTip" Value="Фильтр по сотрудникам"/>                                        
                                        <Style.Triggers>
                                            <Trigger Property="Validation.HasError" Value="True">
                                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                                            </Trigger>                                       
                                        </Style.Triggers>
                                    </Style>
                                </molser:MsComboBox.Style>
                            </molser:MsComboBox>                           
                        </Grid>
                    </DockPanel>
                    <DockPanel Grid.Row="1"
                                Margin="0,10,0,0">
                        <DockPanel.IsEnabled>
                            <MultiBinding Converter="{StaticResource emptyStringToBoolMultiConverter}">
                                <Binding Mode="OneWay" Path="AccessEventsFilter.FacilityCod"/>
                                <Binding Mode="OneWay" Path="AccessEventsFilter.CardPartParsec"/>
                                <Binding Mode="OneWay" Path="AccessEventsFilter.PersonId"/>
                            </MultiBinding>
                        </DockPanel.IsEnabled>
                        <Button DockPanel.Dock="Right"
                                Height="24" Width="30" Margin="0,0,0,0"  
                                Command="{Binding ShowDepartmentsViewCommand}" 
                                CommandParameter="FromAccessEvents"
                                ToolTip="Выбрать отделы"
                                Content="{StaticResource DepartmentCanvas}">
                        </Button>
                        <!--<molser:MsTextBox Width="150" TextWrapping="Wrap"/>-->
                        <Grid DockPanel.Dock="Left">
                            <molser:MsTextBox x:Name="DepartmentsAEF" 
                                 Grid.Row="0"
                                 Grid.Column="0"
                                 Height="24"
                                 HorizontalAlignment="Stretch"
                                 VerticalAlignment="Center"
                                 PreviewMouseDown="SelectAllTextBox_PreviewMouseDown"
                                 Watermark="Отделы...">
                                <Binding Mode="TwoWay" 
                                    Path="AccessEventsFilter.Departments"
                                    UpdateSourceTrigger="PropertyChanged"
                                    NotifyOnValidationError="True"
                                    ValidatesOnExceptions="True">
                                </Binding>
                                <molser:MsTextBox.Style>
                                    <Style TargetType="{x:Type molser:MsTextBox}" BasedOn="{StaticResource StandardMsTextBox}">
                                        <Setter Property="ToolTip" Value="Фильтр по отделам"/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Style.Triggers>
                                            <Trigger Property="Validation.HasError" Value="true">
                                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                                            </Trigger>
                                            <DataTrigger Binding="{Binding Path=Text, ElementName=PersonIDTextBox}" Value="">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </molser:MsTextBox.Style>
                            </molser:MsTextBox>                            
                        </Grid>
                    </DockPanel>

                    <DockPanel HorizontalAlignment="Stretch" 
                            Grid.Row="2" 
                            Margin="0,10,0,0">
                        <!--<CheckBox DockPanel.Dock="Left" HorizontalAlignment="Left" Margin="0,0,0,0" x:Name="OnlyLast20Events" 
                                  IsChecked="{Binding Path=AccessEventsFilter.OnlyLast10EventsForDay, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                  Foreground="OrangeRed">
                            <CheckBox.Style>
                                <Style TargetType="CheckBox" BasedOn="{StaticResource StandardCheckBox}">
                                    <Setter Property="ToolTip" Value="Показать только последние 10 событий за день"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="true">
                                            <Setter Property="ToolTip" Value="Показываются только последние 10 событий за день"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>-->
                        <ToggleButton Width="30" Height="24" Margin="0,0,0,0"
                                    VerticalAlignment="Top"
                                    IsChecked="{Binding Path=AccessEventsFilter.OnlyLast10EventsForDay, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <ToggleButton.Content>
                                <ContentControl Content="{StaticResource Top10Viewbox}" Height="10"/>
                            </ToggleButton.Content>                            
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton" BasedOn="{StaticResource StandardToggleButton}">
                                    <Setter Property="ToolTip" Value="Показать только последние 10 событий за день"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="true">
                                            <Setter Property="ToolTip" Value="Показываются только последние 10 событий за день"/>
                                        </Trigger>                                        
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <Grid Margin="5,0,0,0" 
                             DockPanel.Dock="Left" 
                              HorizontalAlignment="Left">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>                                
                            </Grid.RowDefinitions>
                            <xctk:DateTimePicker 
                                    x:Name="StartDateAEF"
                                    Grid.Row="0" 
                                    Margin="0,0,0,0"    
                                    HorizontalAlignment="Center" 
                                    VerticalAlignment="Center"                                    
                                    Width="130"                                    
                                    FontSize="12"
                                    Format="Custom" 
                                    FormatString="dd.MM.yyyy HH:mm"
                                    ShowButtonSpinner="False"
                                    AutoCloseCalendar="True"
                                    IsEnabled="{Binding AccessEventsFilter.OnlyLast10EventsForDay, 
                                                        Converter={StaticResource boolToBoolInverseConverter}}">
                                <xctk:DateTimePicker.Value>
                                    <Binding Mode="TwoWay" 
                                             Path="AccessEventsFilter.StartDate"
                                             UpdateSourceTrigger="PropertyChanged"
                                             ValidatesOnDataErrors="True">
                                    </Binding>
                                </xctk:DateTimePicker.Value>
                                <xctk:DateTimePicker.Style>
                                    <Style TargetType="{x:Type xctk:DateTimePicker}" BasedOn="{StaticResource StandardDateTimePicker}">
                                        <Setter Property="ToolTip" Value="Начальная дата"/>
                                        <Style.Triggers>
                                            <Trigger Property="Validation.HasError" Value="true">
                                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </xctk:DateTimePicker.Style>
                            </xctk:DateTimePicker>
                        </Grid>
                        <Grid DockPanel.Dock="Left" Margin="5,0,0,0" HorizontalAlignment="Left">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <xctk:DateTimePicker 
                                    x:Name="EndDateAEQP"
                                    HorizontalAlignment="Center" 
                                    VerticalAlignment="Center"                                    
                                    Width="130"
                                    FontSize="12"
                                    Format="Custom" 
                                    FormatString="dd.MM.yyyy HH:mm"
                                    ShowButtonSpinner="False"
                                    AutoCloseCalendar="True"
                                    IsEnabled="{Binding AccessEventsFilter.OnlyLast10EventsForDay, 
                                                        Converter={StaticResource boolToBoolInverseConverter}}">
                                <xctk:DateTimePicker.Value>
                                    <Binding Mode="TwoWay" 
                                             Path="AccessEventsFilter.EndDate"
                                             UpdateSourceTrigger="PropertyChanged"
                                             ValidatesOnDataErrors="True">
                                    </Binding>
                                </xctk:DateTimePicker.Value>
                                <xctk:DateTimePicker.Style>
                                    <Style TargetType="{x:Type xctk:DateTimePicker}"  BasedOn="{StaticResource StandardDateTimePicker}">
                                        <Setter Property="ToolTip" Value="Конечная дата"/>
                                        <Style.Triggers>
                                            <Trigger Property="Validation.HasError" Value="true" >
                                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </xctk:DateTimePicker.Style>
                            </xctk:DateTimePicker>
                        </Grid>
                        <StackPanel Orientation="Horizontal"  DockPanel.Dock="Left" Margin="10,0,0,0">
                            <ToggleButton Width="30" Height="24" Margin="0,0,0,0"
                                    VerticalAlignment="Top"
                                    Checked="AeEventsButton_Checked"
                                    IsChecked="{Binding IsApplyAefEvents}"
                                    Content="{StaticResource EventCanvas}">                                
                                <ToggleButton.Tag>
                                    <Binding Mode="TwoWay" 
                                    Path="AccessEventsFilter.Events"
                                    UpdateSourceTrigger="PropertyChanged"
                                    NotifyOnValidationError="True"
                                    ValidatesOnExceptions="True">
                                    </Binding>
                                </ToggleButton.Tag>
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton" BasedOn="{StaticResource StandardToggleButton}">
                                        <Setter Property="ToolTip" Value="Использовать фильтр по событиям"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsChecked" Value="true">
                                                <Setter Property="ToolTip" Value="Установлен фильтр по событиям"/>
                                            </Trigger>
                                            <Trigger Property="Validation.HasError" Value="true">
                                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                        </StackPanel>
                        <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" Margin="10,0,0,0">
                            <ToggleButton 
                                Height="24" Width="30" Margin="0,0,0,0"  
                                VerticalAlignment="Top"
                                IsChecked="{Binding IsApplyAefAccessPoints}"
                                Checked="AeAccessPointsButton_Checked"
                                CommandParameter="FromAccessEvents"
                                Content="{StaticResource AccessPointCanvas}">
                                <!--Command="{Binding ShowAccessPointsViewCommand}"-->
                                <ToggleButton.Tag>
                                    <Binding Mode="TwoWay" 
                                    Path="AccessEventsFilter.AccessPoints"
                                    UpdateSourceTrigger="PropertyChanged"
                                    NotifyOnValidationError="True"
                                    ValidatesOnExceptions="True">
                                    </Binding>
                                </ToggleButton.Tag>
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton" BasedOn="{StaticResource StandardToggleButton}">
                                        <Setter Property="ToolTip" Value="Использовать фильтр по точкам доступа"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsChecked" Value="true">
                                                <Setter Property="ToolTip" Value="Установлен фильтр по точкам доступа"/>
                                            </Trigger>
                                            <Trigger Property="Validation.HasError" Value="true">
                                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                        </StackPanel>
                        <Grid DockPanel.Dock="Left" Margin="10,0,0,0" HorizontalAlignment="Left">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <molser:MsTextBox x:Name="PersonIDTextBox"
                                 Height="24"
                                 Width="100"
                                 Watermark="ID сотрудника...">
                                <molser:MsTextBox.IsEnabled>
                                    <MultiBinding Converter="{StaticResource emptyStringToBoolMultiConverter}">
                                        <Binding Mode="OneWay" Path="AccessEventsFilter.FacilityCod"/>
                                        <Binding Mode="OneWay" Path="AccessEventsFilter.CardPartParsec"/>
                                    </MultiBinding>
                                </molser:MsTextBox.IsEnabled>
                                <Binding Mode="TwoWay" 
                                        Path="AccessEventsFilter.PersonId"
                                        UpdateSourceTrigger="PropertyChanged"
                                        NotifyOnValidationError="True"
                                        ValidatesOnExceptions="True">
                                </Binding>
                                <molser:MsTextBox.Style>
                                    <Style TargetType="{x:Type molser:MsTextBox}" BasedOn="{StaticResource StandardMsTextBox}">
                                        <Setter Property="ToolTip" Value="Фильтр по ID сотрудника"/>
                                        <Style.Triggers>
                                            <Trigger Property="Validation.HasError" Value="true">
                                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </molser:MsTextBox.Style>
                            </molser:MsTextBox>                            
                        </Grid>
                        <StackPanel DockPanel.Dock="Left" Orientation="Horizontal"
                                    Visibility="{Binding UserPermissions[SeePersons], Converter={StaticResource boolToUIVisibilityConverter}}"
                                    Margin="5,0,0,0">
                            <Grid HorizontalAlignment="Left">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <molser:MsTextBox x:Name="FacilityCodTextBox" 
                                     Grid.Row="0"
                                     Grid.Column="0"
                                     Height="24"
                                     Width="80"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Center"
                                     Watermark="Код карты...">
                                    <molser:MsTextBox.IsEnabled>
                                        <MultiBinding Converter="{StaticResource emptyStringToBoolMultiConverter}">
                                            <Binding Mode="OneWay" Path="AccessEventsFilter.PersonId"/>
                                        </MultiBinding>
                                    </molser:MsTextBox.IsEnabled>
                                    <Binding Mode="TwoWay" 
                                        Path="AccessEventsFilter.FacilityCod"
                                        UpdateSourceTrigger="PropertyChanged"
                                        NotifyOnValidationError="True"
                                        ValidatesOnExceptions="True">
                                    </Binding>
                                    <molser:MsTextBox.Style>
                                        <Style TargetType="{x:Type molser:MsTextBox}" BasedOn="{StaticResource StandardMsTextBox}">
                                            <Setter Property="ToolTip" Value="Фильтр по коду карты (коду объекта)"/>
                                        </Style>
                                    </molser:MsTextBox.Style>
                                </molser:MsTextBox>                                
                            </Grid>
                            <Grid HorizontalAlignment="Left" Margin="5,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <molser:MsTextBox x:Name="CardPartParsecTextBox" 
                                     Grid.Row="0"
                                     Grid.Column="0"
                                     Height="24"
                                     Width="95"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Center"
                                     Watermark="Номер карты...">
                                    <molser:MsTextBox.IsEnabled>
                                        <MultiBinding Converter="{StaticResource emptyStringToBoolMultiConverter}">
                                            <Binding Mode="OneWay" Path="AccessEventsFilter.PersonId"/>
                                        </MultiBinding>
                                    </molser:MsTextBox.IsEnabled>
                                    <Binding Mode="TwoWay" 
                                        Path="AccessEventsFilter.CardPartParsec"
                                        UpdateSourceTrigger="PropertyChanged"
                                        NotifyOnValidationError="True"
                                        ValidatesOnExceptions="True">
                                    </Binding>
                                    <molser:MsTextBox.Style>
                                        <Style TargetType="{x:Type molser:MsTextBox}" BasedOn="{StaticResource StandardMsTextBox}">
                                            <Setter Property="ToolTip" Value="Фильтр по номеру карты"/>
                                        </Style>
                                    </molser:MsTextBox.Style>
                                </molser:MsTextBox>                                
                            </Grid>
                            <!--<xctk:MaskedTextBox Width="50" />-->
                            <!--<xctk:DateTimePicker Width="50"/>-->
                        </StackPanel>
                    </DockPanel>
                    <!--<FrameworkElement x:Name="dummyElement" Visibility="Collapsed"/>-->
                    <DataGrid x:Name="accessEvenetsDataGrid" 
                              Grid.Row="3"
                              Margin="0,10,0,0"
                              ItemsSource="{Binding AccessEvents, NotifyOnTargetUpdated=True}"
                              SelectedItem="{Binding CurrentProtocolItem}"
                              VerticalAlignment="Top"
                              AutoGenerateColumns="False"
                              Visibility="{Binding AccessEvents, Converter={StaticResource nullToVisibilityConverter}}" 
                              GridLinesVisibility="Horizontal"
                              HorizontalGridLinesBrush="{StaticResource DataGridLinesBrush}"
                              LoadingRow="dataGrid_LoadingRow" 
                              CanUserResizeRows="False"
                              IsReadOnly="True"
                              HeadersVisibility="All"
                              SelectionMode="Single"
                              SelectionUnit="FullRow"
                              TargetUpdated="DataGrid_TargetUpdated"
                              >
                        <!--<DataGrid.Resources>
                            <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource StandardDataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            </Style>
                        </DataGrid.Resources>-->
                        <DataGrid.Columns>
                            <!--<DataGridTextColumn Header="Дата" Binding="{Binding Path=Date, StringFormat=\{0:dd.MM.yy HH:mm:ss\}}"/>-->
                            <DataGridTemplateColumn Header="Дата" CanUserSort="True" SortMemberPath="Date"
                                                    ClipboardContentBinding="{Binding Date}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <TextBlock Text="{Binding Path=Date, StringFormat=\{0:dd.MM.yy HH:mm:ss\}}"/>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Точка доступа" CanUserSort="True" SortMemberPath="Nc32kName"
                                                    ClipboardContentBinding="{Binding Nc32kName}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <!--<Button x:Name="showOnMapButton"
                                                            Visibility="Hidden"
                                                            Background="{StaticResource DataGridSelectedCellBrush}"
                                                            Margin="0,0,7,0"
                                                            Width="20" Height="20"
                                                            Command="{Binding DataContext.IidkShowObjectOnMapCommand, 
                                                                              RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}"
                                                            CommandParameter="FromAccessEvents"
                                                            ToolTip="Показать объект на карте"
                                                            Content="{StaticResource LocationViewbox}"/>-->
                                            <TextBlock x:Name="content" 
                                                       Text="{Binding Path=Nc32kName}"/>
                                        </StackPanel>
                                        <DataTemplate.Triggers>
                                            <!--<DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridCell}}}" Value="True">
                                                <Setter TargetName="showOnMapButton" Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Nc32kId}" Value="">
                                                <Setter TargetName="showOnMapButton" Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding DataContext.IsIidkEnabled, 
                                                                              RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" 
                                                         Value="False">
                                                <Setter TargetName="showOnMapButton" Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>-->
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <!--<DataGridTextColumn Header="Событие" Binding="{Binding Path=Event}"/>-->
                            <DataGridTemplateColumn Header="Событие" CanUserSort="True" SortMemberPath="Event"
                                                    ClipboardContentBinding="{Binding Event}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <!--<Button x:Name="showOnCamButton"
                                                            Visibility="Hidden"
                                                            Background="{StaticResource DataGridSelectedCellBrush}"
                                                            Margin="0,0,7,0"
                                                            Width="20" Height="20"
                                                            Command="{Binding DataContext.IidkShowEventOnCamCommand, 
                                                                              RelativeSource={RelativeSource FindAncestor, 
                                                                                                             AncestorType={x:Type DataGrid}}}"
                                                            CommandParameter="FromAccessEvents"
                                                            ToolTip="Показать событие на камере"
                                                            Content="{StaticResource ShowOnCamViewbox}"/>-->
                                            <TextBlock x:Name="content" 
                                                       Text="{Binding Path=Event}"/>
                                        </StackPanel>
                                        <!--<DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridCell}}}" Value="True">
                                                <Setter TargetName="showOnCamButton" Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Nc32kId}" Value="">
                                                <Setter TargetName="showOnCamButton" Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding DataContext.IsIidkEnabled, 
                                                                              RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" 
                                                         Value="False">
                                                <Setter TargetName="showOnCamButton" Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>-->
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Информация" CanUserSort="True" SortMemberPath="Information"
                                                    ClipboardContentBinding="{Binding Information}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <!--<Button x:Name="personInfoButton"
                                                            Visibility="Hidden"
                                                            Background="{StaticResource DataGridSelectedCellBrush}"
                                                            Margin="0,0,7,0"
                                                            Width="20" Height="20"
                                                            Command="{Binding DataContext.ShowPersonViewCommand, 
                                                                              RelativeSource={RelativeSource FindAncestor, 
                                                                                                             AncestorType={x:Type DataGrid}}}"
                                                            CommandParameter="FromAccessEvents"
                                                            ToolTip="Показать сотрудника"
                                                            Content="{StaticResource InfoViewbox}"/>-->
                                            <TextBlock x:Name="content" 
                                                       Text="{Binding Path=Information}"/>
                                        </StackPanel>
                                        <!--<DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridCell}}}" Value="True">
                                                <Setter TargetName="personInfoButton" Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding PersonID}" Value="">
                                                <Setter TargetName="personInfoButton" Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>-->
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <!--<DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell" BasedOn="{StaticResource StandardDataGridCell}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="DataGridCell">
                                                    <Border x:Name="border">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Button x:Name="personInfoButton"
                                                            Visibility="Collapsed"
                                                            Background="{StaticResource DataGridSelectedCellBrush}"
                                                            Margin="0,0,7,0"
                                                            Width="20" Height="20"
                                                            Command="{Binding DataContext.ShowPersonViewCommand, 
                                                                              RelativeSource={RelativeSource FindAncestor, 
                                                                                                             AncestorType={x:Type DataGrid}}}"
                                                            CommandParameter="FromAccessEvents"
                                                            ToolTip="Показать сотрудника"
                                                            Content="{StaticResource InfoViewbox}"/>
                                                            <TextBlock x:Name="content" Text="{Binding Path=Person}"/>
                                                        </StackPanel>
                                                    </Border>                                                    
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsSelected" Value="True">
                                                            <Setter TargetName="personInfoButton" Property="Visibility" Value="Visible"/>
                                                            <Setter TargetName="border" Property="Background" Value="{StaticResource DataGridSelectedCellBrush}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>                                        
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>-->
                            </DataGridTemplateColumn>
                            <!--<DataGridTextColumn Header="Отдел" Binding="{Binding Path=Department}"/>-->
                            <!--<DataGridTextColumn Header="Карта" Binding="{Binding Path=Card}"
                                                Visibility="{Binding DataContext.UserPermissions[SeeLevels],
                                                                 Source={x:Reference dummyElement},
                                                                 Converter={StaticResource boolToUIVisibilityConverter}}"/>-->
                            <!--<DataGridTextColumn Header="ID сотрудника" Binding="{Binding Path=PersonID}" />-->
                        </DataGrid.Columns>
                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell" BasedOn="{StaticResource StandardDataGridCell}">
                                <!--<Setter Property="Background" Value="Orange"></Setter>-->
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Event}" Value="В доступе на вход отказано (APB)">
                                        <Setter Property="Foreground" Value="Magenta"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Event}" Value="В доступе на выход отказано (APB)">
                                        <Setter Property="Foreground" Value="Magenta"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Показать информацию"
                                     Command="{Binding ShowInfoCommand}">
                                    <MenuItem.Icon>
                                        <ContentControl Height="16" Width="16"                                                        
                                                        Content="{StaticResource InfoViewbox}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Показать объект на карте"
                                    Command="{Binding IidkShowObjectOnMapCommand}">
                                    <MenuItem.Visibility>
                                        <MultiBinding Mode="OneWay" Converter="{StaticResource boolToUIVisibilityMultiConverter}">
                                            <Binding Mode="OneWay" Path="IsIidkEnabled" />
                                            <Binding Mode="OneWay" Path="Settings.IidkMap" Converter="{StaticResource stringToBoolConverter}"/>
                                        </MultiBinding>
                                    </MenuItem.Visibility>
                                    <MenuItem.Icon>
                                        <ContentControl Height="15" Width="20" Content="{StaticResource LocationViewbox}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Показать событие на камере"
                                    Command="{Binding IidkShowEventOnCamCommand}">
                                    <MenuItem.Visibility>
                                        <MultiBinding Mode="OneWay" Converter="{StaticResource boolToUIVisibilityMultiConverter}">
                                            <Binding Mode="OneWay" Path="IsIidkEnabled" />
                                            <Binding Mode="OneWay" Path="Settings.IidkMonitor" Converter="{StaticResource stringToBoolConverter}"/>
                                        </MultiBinding>
                                    </MenuItem.Visibility>
                                    <MenuItem.Icon>
                                        <ContentControl Height="17" Width="17" Content="{StaticResource ShowOnCamViewbox}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Копировать" Command="Copy"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.InputBindings>
                            <MouseBinding Gesture="LeftDoubleClick" 
                                          Command="{Binding ShowInfoCommand}"/>
                        </DataGrid.InputBindings>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem x:Name="Persons" Visibility="{Binding UserPermissions[SeePersons], Converter={StaticResource boolToUIVisibilityConverter}}">
                <TabItem.Header>
                    <Grid Margin="-6,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="18"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <molser:MolserWait Grid.Column="0" 
                                           VerticalAlignment="Bottom" 
                                           HorizontalAlignment="Left" 
                                           Margin="0,0,0,0" 
                                           Height="16" Width="16"
                                           Visibility="{Binding IsGettingPersons, Converter={StaticResource  boolToUIVisibilityConverter}}"/>
                        <TextBlock Grid.Column="1" Text="Сотрудники"/>
                    </Grid>
                </TabItem.Header>
                <Grid  Margin="10,10,10,10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="IsEnabled" Value="True"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsGettingPersons}" Value="true">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Grid Grid.Row="0">
                        <Grid.IsEnabled>
                            <MultiBinding Converter="{StaticResource emptyStringToBoolMultiConverter}">
                                <Binding Mode="OneWay" Path="PersonsFilter.FacilityCod"/>
                                <Binding Mode="OneWay" Path="PersonsFilter.CardPartParsec"/>
                                <Binding Mode="OneWay" Path="PersonsFilter.PersonId"/>
                            </MultiBinding>
                        </Grid.IsEnabled>
                        <molser:MsTextBox x:Name="PersonPF" 
                                 Grid.Row="0"
                                 Grid.Column="0"
                                 Height="24"
                                 HorizontalAlignment="Stretch"
                                 VerticalAlignment="Center"
                                 PreviewMouseDown="SelectAllTextBox_PreviewMouseDown"
                                 Watermark="Именные компоненты сотрудника...">
                            <Binding Mode="TwoWay" 
                                    Path="PersonsFilter.Person"
                                    UpdateSourceTrigger="PropertyChanged"
                                    NotifyOnValidationError="True"
                                    ValidatesOnExceptions="True">
                            </Binding>
                            <molser:MsTextBox.Style>
                                <Style TargetType="{x:Type molser:MsTextBox}" BasedOn="{StaticResource StandardMsTextBox}">
                                    <Setter Property="ToolTip" Value="Именные компоненты сотрудника"/>
                                    <Style.Triggers>
                                        <Trigger Property="Validation.HasError" Value="true">
                                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </molser:MsTextBox.Style>
                        </molser:MsTextBox>                        
                    </Grid>
                    <DockPanel Grid.Row="1"
                                Margin="0,10,0,0">
                        <DockPanel.IsEnabled>
                            <MultiBinding Converter="{StaticResource emptyStringToBoolMultiConverter}">
                                <Binding Mode="OneWay" Path="PersonsFilter.FacilityCod"/>
                                <Binding Mode="OneWay" Path="PersonsFilter.CardPartParsec"/>
                                <Binding Mode="OneWay" Path="PersonsFilter.PersonId"/>
                            </MultiBinding>
                        </DockPanel.IsEnabled>
                        <Button DockPanel.Dock="Right"
                                Height="24" Width="30" Margin="0,0,0,0"  
                                Command="{Binding ShowDepartmentsViewCommand}" 
                                CommandParameter="FromPersons"
                                ToolTip="Выбрать отделы"
                                Content="{StaticResource DepartmentCanvas}">
                        </Button>
                        <Grid DockPanel.Dock="Left">
                            <molser:MsTextBox x:Name="DepartmentsPF" 
                                     Grid.Row="0"
                                     Grid.Column="0"
                                     Height="24"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Center"
                                     PreviewMouseDown="SelectAllTextBox_PreviewMouseDown"
                                     Watermark="Отделы...">
                                <Binding Mode="TwoWay" 
                                        Path="PersonsFilter.Departments"
                                        UpdateSourceTrigger="PropertyChanged"
                                        NotifyOnValidationError="True"
                                        ValidatesOnExceptions="True">
                                </Binding>
                                <molser:MsTextBox.Style>
                                    <Style TargetType="{x:Type molser:MsTextBox}" BasedOn="{StaticResource StandardMsTextBox}">
                                        <Setter Property="ToolTip" Value="Отделы"/>
                                        <Style.Triggers>
                                            <Trigger Property="Validation.HasError" Value="true">
                                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </molser:MsTextBox.Style>
                            </molser:MsTextBox>                            
                        </Grid>
                    </DockPanel>
                    <StackPanel 
                        Grid.Row="2" 
                        Margin="0,10,0,0" 
                        Orientation="Horizontal">
                        <Grid DockPanel.Dock="Left" Margin="0,0,5,0" HorizontalAlignment="Left">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <molser:MsTextBox x:Name="PersonsPersonIDTextBox"
                                 Height="24"
                                 Width="100"
                                 Watermark="ID сотрудника...">
                                <molser:MsTextBox.IsEnabled>
                                    <MultiBinding Converter="{StaticResource emptyStringToBoolMultiConverter}">
                                        <Binding Mode="OneWay" Path="PersonsFilter.FacilityCod"/>
                                        <Binding Mode="OneWay" Path="PersonsFilter.CardPartParsec"/>
                                    </MultiBinding>
                                </molser:MsTextBox.IsEnabled>
                                <Binding Mode="TwoWay" 
                                        Path="PersonsFilter.PersonId"
                                        UpdateSourceTrigger="PropertyChanged"
                                        NotifyOnValidationError="True"
                                        ValidatesOnExceptions="True">
                                </Binding>
                                <molser:MsTextBox.Style>
                                    <Style TargetType="{x:Type molser:MsTextBox}" BasedOn="{StaticResource StandardMsTextBox}">
                                        <Setter Property="ToolTip" Value="Фильтр по ID сотрудника"/>
                                        <Style.Triggers>
                                            <Trigger Property="Validation.HasError" Value="true">
                                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </molser:MsTextBox.Style>
                            </molser:MsTextBox>                            
                        </Grid>
                        <StackPanel DockPanel.Dock="Left" Orientation="Horizontal"
                                    Margin="0,0,10,0">
                            <Grid HorizontalAlignment="Left">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <molser:MsTextBox x:Name="PersonsFacilityCodTextBox" 
                                     Grid.Row="0"
                                     Grid.Column="0"
                                     Height="24"
                                     Width="80"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Center"
                                     Watermark="Код карты...">
                                    <molser:MsTextBox.IsEnabled>
                                        <MultiBinding Converter="{StaticResource emptyStringToBoolMultiConverter}">
                                            <Binding Mode="OneWay" Path="PersonsFilter.PersonId"/>
                                        </MultiBinding>
                                    </molser:MsTextBox.IsEnabled>
                                    <Binding Mode="TwoWay" 
                                        Path="PersonsFilter.FacilityCod"
                                        UpdateSourceTrigger="PropertyChanged"
                                        NotifyOnValidationError="True"
                                        ValidatesOnExceptions="True">
                                    </Binding>
                                    <molser:MsTextBox.Style>
                                        <Style TargetType="{x:Type molser:MsTextBox}" BasedOn="{StaticResource StandardMsTextBox}">
                                            <Setter Property="ToolTip" Value="Фильтр по коду карты (коду объекта)"/>
                                        </Style>
                                    </molser:MsTextBox.Style>
                                </molser:MsTextBox>                                
                            </Grid>
                            <Grid HorizontalAlignment="Left" Margin="5,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <molser:MsTextBox x:Name="PersonsCardPartParsecTextBox" 
                                     Grid.Row="0"
                                     Grid.Column="0"
                                     Height="24"
                                     Width="95"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Center"
                                     Watermark="Номер карты...">
                                    <molser:MsTextBox.IsEnabled>
                                        <MultiBinding Converter="{StaticResource emptyStringToBoolMultiConverter}">
                                            <Binding Mode="OneWay" Path="PersonsFilter.PersonId"/>
                                        </MultiBinding>
                                    </molser:MsTextBox.IsEnabled>
                                    <Binding Mode="TwoWay" 
                                        Path="PersonsFilter.CardPartParsec"
                                        UpdateSourceTrigger="PropertyChanged"
                                        NotifyOnValidationError="True"
                                        ValidatesOnExceptions="True">
                                    </Binding>
                                    <molser:MsTextBox.Style>
                                        <Style TargetType="{x:Type molser:MsTextBox}" BasedOn="{StaticResource StandardMsTextBox}">
                                            <Setter Property="ToolTip" Value="Фильтр по номеру карты"/>
                                        </Style>
                                    </molser:MsTextBox.Style>
                                </molser:MsTextBox>                                
                            </Grid>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Visibility="{Binding UserPermissions[SeePersonHistory], Converter={StaticResource boolToUIVisibilityConverter}}">
                            <CheckBox
                                  IsChecked="{Binding Path=PersonsFilter.ShowPersonHistory, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                  ToolTip="Учитывать историю изменений"/>
                            <TextBlock Text="Учитывать удаленных" Margin="5,0,10,0"/>
                        </StackPanel>
                        <!--<Button Margin="10,0,0,0"
                            HorizontalAlignment="Left"
                            Height="24" Width="24" 
                            Command="{Binding ShowInfoCommand}"
                            CommandParameter="FromPersons"
                            ToolTip="Показать сотрудника" ToolTipService.ShowOnDisabled="True"
                            Content="{StaticResource InfoViewbox}" >
                        </Button>-->
                        <StackPanel 
                            Orientation="Horizontal" 
                            Margin="0,0,20,0">
                            <TextBlock 
                                Text="Отдел:"  
                                Margin="0,0,10,0"/>
                            <molser:MsComboBox x:Name="cbDepartmentFilter"                            
                                MinHeight="24"
                                HorizontalAlignment="Stretch"
                                ItemsSource="{Binding Departments, NotifyOnTargetUpdated=True}"
                                SelectedIndex="0"  
                                SelectionChanged="cbDepartmentFilter_SelectionChanged"
                                TargetUpdated="cbDepartmentFilter_TargetUpdated"
                                VerticalAlignment="Center">
                            </molser:MsComboBox>
                        </StackPanel>
                    </StackPanel>

                    <DataGrid Grid.Row="3" x:Name="personsDataGrid" Margin="0,10,0,0"
                        ItemsSource="{Binding Persons, NotifyOnTargetUpdated=True}"                              
                        SelectedItem="{Binding CurrentPerson}"
                        HorizontalAlignment="Stretch" 
                        VerticalAlignment="Top"
                        AutoGenerateColumns="False"
                        Visibility="{Binding Persons, Converter={StaticResource nullToVisibilityConverter}}" 
                        GridLinesVisibility="Horizontal"
                        HorizontalGridLinesBrush="{StaticResource DataGridLinesBrush}"
                        LoadingRow="personsDataGrid_LoadingRow"
                        CanUserResizeRows="False"
                        CanUserAddRows="False"
                        HeadersVisibility="All" 
                        SelectionMode="Single"
                        TargetUpdated="DataGrid_TargetUpdated"
                                                
                        EnableRowVirtualization="True"
                        EnableColumnVirtualization="True"
                        VirtualizingPanel.IsVirtualizing="True"
                        VirtualizingPanel.VirtualizationMode="Recycling"
                        
                        IsTextSearchEnabled="True"
                        TextSearch.TextPath="FullName"
                        RowHeight="80"
                        >
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="Фото" IsReadOnly="True" Width="80" MinWidth="80">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid DataContext="{Binding Path=DataContext, 
                                                                        RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, 
                                                                        Converter={StaticResource asyncImageConverter}}">
                                                <Viewbox Width="60" 
                                                         HorizontalAlignment="Center"
                                                         VerticalAlignment="Bottom">
                                                    <ContentControl Content="{StaticResource PersonPath}" Foreground="{StaticResource PersonPathBrush}"/>
                                                </Viewbox>
                                                <Label HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"
                                                        Foreground="DarkGray"
                                                       Content="загрузка..." 
                                                       Visibility="{Binding IsNotCompleted, Converter={StaticResource bool2VisibilityConverter}}"/>
                                                <Label HorizontalAlignment="Center"
                                                       VerticalAlignment="Center" 
                                                       Foreground="Red"
                                                       Content="ошибка" 
                                                       Visibility="{Binding IsFaulted, Converter={StaticResource bool2VisibilityConverter}}"/>
                                                <Image HorizontalAlignment="Center"
                                                       VerticalAlignment="Bottom"
                                                       Source="{Binding Result}"/>
                                            </Grid>
                                            <Viewbox Height="13" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                                                         Visibility="{Binding Converter={StaticResource dataBaseIconVisibilityConverter}}"
                                                        ToolTip="Данные из дополнительной базы данных">
                                                <Border Background="White" Padding="3" >
                                                    <ContentControl Content="{StaticResource DataBasePath}" Foreground="Orange"/>
                                                </Border>
                                            </Viewbox>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Фамилия" CanUserSort="True" SortMemberPath="Name">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <TextBlock Grid.Row="0" x:Name="content" Text="{Binding Path=Name}"/>
                                            <!--<Button Grid.Row="1" x:Name="personInfoButton"
                                                    Visibility="Hidden"
                                                    Background="{StaticResource DataGridSelectedCellBrush}"
                                                    HorizontalAlignment="Left" VerticalAlignment="Top"
                                                    Width="22" Height="22"
                                                    Command="{Binding DataContext.ShowPersonViewCommand, 
                                                                        RelativeSource={RelativeSource FindAncestor, 
                                                                                                        AncestorType={x:Type DataGrid}}}"
                                                    CommandParameter="FromPersons"
                                                    ToolTip="Показать сотрудника"
                                                    Content="{StaticResource InfoViewbox}"/>-->
                                            <TextBlock Grid.Row="2" Text="{Binding Path=Department}" FontStyle="Italic"/>
                                        </Grid>
                                        <!--<DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridCell}}}" Value="True">
                                                <Setter TargetName="personInfoButton" Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>-->
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Имя" Binding="{Binding Path=Surname}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Отчество" Binding="{Binding Path=Patronymic}" IsReadOnly="True"/>
                            <!--<DataGridTextColumn Header="Отдел" Binding="{Binding Path=Department}" IsReadOnly="True"/>-->
                            <!--<DataGridTextColumn Header="Срок действия карты" Binding="{Binding Path=Expired, StringFormat=\{0:dd.MM.yyyy\}}"  IsReadOnly="True"/>-->
                            <DataGridTemplateColumn Header="Срок действия карты" CanUserSort="True" SortMemberPath="Expired"
                                                    ClipboardContentBinding="{Binding Expired}" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <TextBlock Text="{Binding Path=Expired, StringFormat=\{0:dd.MM.yyyy\}}"/>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Заблокирован" IsReadOnly="True" CanUserSort="True" SortMemberPath="IsLocked">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <CheckBox IsChecked="{Binding Path=IsLocked, UpdateSourceTrigger=PropertyChanged}" 
                                            HorizontalAlignment="Center" Margin="4,4,4,0" IsEnabled="False"/>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Двойной проход запрещен" IsReadOnly="True" CanUserSort="True" SortMemberPath="IsApb">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <CheckBox IsChecked="{Binding Path=IsApb, UpdateSourceTrigger=PropertyChanged}" 
                                            HorizontalAlignment="Center" Margin="4,4,4,0" IsEnabled="False"/>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="ID" Binding="{Binding Path=Id}" IsReadOnly="True" Width="*"/>
                        </DataGrid.Columns>
                        <!--<DataGrid.RowDetailsTemplate>
                            <DataTemplate>
                                <TextBlock Padding="10,0,0,0" Text="{Binding Path=Department}" FontStyle="Italic" Background="{StaticResource DataGridSelectedCellBrush}"/>
                            </DataTemplate>
                        </DataGrid.RowDetailsTemplate>-->
                        <!--<DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
                                <Setter Property="ToolTipService.BetweenShowDelay" Value="1000"/>
                                <Setter Property="ToolTip.HorizontalOffset" Value="20"/>
                                <Setter Property="ToolTip.VerticalOffset" Value="10"/>
                                <Setter Property="ToolTip">
                                    <Setter.Value>
                                        <TextBlock Text="{Binding Department}" />
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGrid.RowStyle>-->
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Показать информацию"
                                     Command="{Binding ShowInfoCommand}">
                                    <MenuItem.Icon>
                                        <ContentControl Height="16" Width="16"                                                        
                                                        Content="{StaticResource InfoViewbox}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <!--<MenuItem Header="Копировать" Command="Copy"/>-->
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.InputBindings>
                            <MouseBinding Gesture="LeftDoubleClick" 
                                          Command="{Binding ShowInfoCommand}"/>
                        </DataGrid.InputBindings>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem x:Name="AccessPoints">
                <TabItem.Header>
                    <Grid Margin="-6,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="18"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <molser:MolserWait Grid.Column="0" 
                                           VerticalAlignment="Bottom" 
                                           HorizontalAlignment="Left" 
                                           Margin="0,0,0,0" 
                                           Height="16" Width="16"
                                           Visibility="{Binding IsGettingAccessPoints, Converter={StaticResource  boolToUIVisibilityConverter}}"/>
                        <TextBlock Grid.Column="1" Text="Точки доступа"/>
                    </Grid>
                </TabItem.Header>
                <Grid  Margin="10,10,10,10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal">
                        <Grid>
                            <molser:MsTextBox x:Name="AccessPointName" 
                                 Grid.Row="0"
                                 Grid.Column="0"
                                 Height="24"
                                 Width="200"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 PreviewMouseDown="SelectAllTextBox_PreviewMouseDown"
                                 Watermark="Название...">
                                <Binding Mode="TwoWay" 
                                    Path="AccessPointsFilter.Name"
                                    UpdateSourceTrigger="PropertyChanged"
                                    NotifyOnValidationError="True"
                                    ValidatesOnExceptions="True">
                                </Binding>
                                <molser:MsTextBox.Style>
                                    <Style TargetType="{x:Type molser:MsTextBox}" BasedOn="{StaticResource StandardMsTextBox}">
                                        <Setter Property="ToolTip" Value="Название"/>
                                        <Style.Triggers>
                                            <Trigger Property="Validation.HasError" Value="true">
                                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </molser:MsTextBox.Style>
                            </molser:MsTextBox>                            
                        </Grid>
                        <!--<Grid Margin="0,0,0,0">
                            <TextBox x:Name="AccessPointsFindTextBox" 
                                 Grid.Row="0"
                                 Grid.Column="0"
                                 Width="170"
                                 Height="24"
                                 HorizontalAlignment="Stretch"
                                 VerticalAlignment="Center"
                                 IsEnabled="{Binding AccessPoints, Converter={StaticResource nullToBoolConverter}}"
                                 ToolTip="Найти">
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Enter" Command="commands:CustomCommands.Find" CommandParameter="FromAccessPoints"/>
                                </TextBox.InputBindings>
                            </TextBox>
                            <TextBlock 
                                Grid.Row="0"
                                Grid.Column="0"
                                IsHitTestVisible="False"
                                Text="Найти..."
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Margin="5,0,0,0"
                                Foreground="DarkGray">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, ElementName=AccessPointsFindTextBox}" Value="">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                        <Button DockPanel.Dock="Right"
                                Height="24" Width="30" Margin="0,0,0,0"  
                                ToolTip="Поиск"
                                Command="commands:CustomCommands.Find"
                                CommandParameter="FromAccessPoints"
                                Content="{StaticResource FindCanvas}">
                        </Button>-->
                        <Button   HorizontalAlignment="Left"
                                    Margin="10,0,0,0"
                                    Height="24" Width="30"   
                                    Command="{Binding ShowPersonsViewCommand}" 
                                    CommandParameter="FromAccessPoints"
                                    ToolTip="Показать сотрудников" ToolTipService.ShowOnDisabled="True"
                                    Content="{StaticResource PersonCanvas}">
                        </Button>
                        <Button   HorizontalAlignment="Left"
                                  Height="24" Width="30" Margin="10,0,0,0"  
                                  Command="{Binding ShowLevelsViewCommand}" 
                                  CommandParameter="FromAccessPoints"
                                  ToolTip="Показать уровни доступа" ToolTipService.ShowOnDisabled="True"
                                  Content="{StaticResource LevelCanvas}"
                                  Visibility="{Binding UserPermissions[SeeLevels], Converter={StaticResource boolToUIVisibilityConverter}}">
                        </Button>
                        <StackPanel Orientation="Horizontal"
                                    Visibility="{Binding IsIidkEnabled, Converter={StaticResource boolToUIVisibilityConverter}}"
                                    Margin="10,0,0,0">
                        </StackPanel>
                    </StackPanel>
                    <DataGrid x:Name="accessPointsDataGrid" 
                              Grid.Row="1"
                              Margin="0,10,0,0"
                              ItemsSource="{Binding AccessPoints, NotifyOnTargetUpdated=True}"
                              SelectedItem="{Binding CurrentAccessPoint}"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Top"
                              AutoGenerateColumns="False"
                              Visibility="{Binding AccessPoints, Converter={StaticResource nullToVisibilityConverter}}" 
                              GridLinesVisibility="Horizontal"
                              HorizontalGridLinesBrush="{StaticResource DataGridLinesBrush}"
                              LoadingRow="dataGrid_LoadingRow" 
                              CanUserResizeRows="False"
                              IsReadOnly="True"
                              HeadersVisibility="All"
                              SelectionMode="Single"
                              SelectionUnit="FullRow"
                              IsTextSearchEnabled="True"
                              TextSearch.TextPath="Name"
                              TargetUpdated="accessPointsDataGrid_TargetUpdated"
                              >
                        <DataGrid.Columns>
                            <!--<DataGridTextColumn Header="Название" Binding="{Binding Path=Name}"/>-->
                            <!--<DataGridTextColumn Header="Название" Binding="{Binding Path=Name}" IsReadOnly="True">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>-->
                            <DataGridTemplateColumn Header="Название" CanUserSort="True" SortMemberPath="Name"
                                                    ClipboardContentBinding="{Binding Name}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <!--<Button x:Name="showOnMapButton"
                                                            Visibility="Hidden"
                                                            Background="{StaticResource DataGridSelectedCellBrush}"
                                                            Margin="0,0,7,0"
                                                            Width="20" Height="20"
                                                            Command="{Binding DataContext.IidkShowObjectOnMapCommand, 
                                                                              RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}"
                                                            CommandParameter="FromAccessPoints"
                                                            ToolTip="Показать объект на карте"
                                                            Content="{StaticResource LocationViewbox}"/>-->
                                            <TextBlock x:Name="content" 
                                                       Text="{Binding Path=Name}"/>
                                        </StackPanel>
                                        <!--<DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridCell}}}" Value="True">
                                                <Setter TargetName="showOnMapButton" Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Nc32kId}" Value="">
                                                <Setter TargetName="showOnMapButton" Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding DataContext.IsIidkEnabled, 
                                                                              RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" 
                                                         Value="False">
                                                <Setter TargetName="showOnMapButton" Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>-->
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="ID" Binding="{Binding Path=Id}" IsReadOnly="True" Width="*"/>

                            <!--<DataGridTextColumn Header="Описание" Binding="{Binding Path=Description}"/>
                            <DataGridTextColumn Header="Тип" Binding="{Binding Path=Type}"/>-->
                        </DataGrid.Columns>
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Показать сотрудников"
                                    Command="{Binding ShowPersonsViewCommand}" 
                                    CommandParameter="FromAccessPoints">
                                    <MenuItem.Icon>
                                        <ContentControl Height="15" Width="15" Content="{StaticResource PersonCanvas}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Показать уровни доступа"
                                    Command="{Binding ShowLevelsViewCommand}" 
                                    CommandParameter="FromAccessPoints"
                                    Visibility="{Binding UserPermissions[SeeLevels], Converter={StaticResource boolToUIVisibilityConverter}}">
                                    <MenuItem.Icon>
                                        <ContentControl Height="15" Width="15" Content="{StaticResource LevelCanvas}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Показать объект на карте"
                                    Command="{Binding IidkShowObjectOnMapCommand}">
                                    <MenuItem.Visibility>
                                        <MultiBinding Mode="OneWay" Converter="{StaticResource boolToUIVisibilityMultiConverter}">
                                            <Binding Mode="OneWay" Path="IsIidkEnabled" />
                                            <Binding Mode="OneWay" Path="Settings.IidkMap" Converter="{StaticResource stringToBoolConverter}"/>
                                        </MultiBinding>
                                    </MenuItem.Visibility>
                                    <MenuItem.Icon>
                                        <ContentControl Height="15" Width="20" Content="{StaticResource LocationViewbox}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Command="Copy"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem x:Name="Levels" Visibility="{Binding UserPermissions[SeeLevels], Converter={StaticResource boolToUIVisibilityConverter}}">
                <TabItem.Header>
                    <Grid Margin="-6,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="18"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <molser:MolserWait Grid.Column="0" 
                                           VerticalAlignment="Bottom" 
                                           HorizontalAlignment="Left" 
                                           Margin="0,0,0,0" 
                                           Height="16" Width="16"
                                           Visibility="{Binding IsGettingLevels, Converter={StaticResource  boolToUIVisibilityConverter}}"/>
                        <TextBlock Grid.Column="1" Text="Уровни доступа"/>
                    </Grid>
                </TabItem.Header>
                <Grid  Margin="10,10,10,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="161*"/>
                        <ColumnDefinition Width="409*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" Grid.ColumnSpan="2">
                        <Grid Margin="0,0,10,0">
                            <molser:MsTextBox x:Name="LevelName" 
                                 Grid.Row="0"
                                 Grid.Column="0"
                                 Height="24"
                                 Width="200"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 PreviewMouseDown="SelectAllTextBox_PreviewMouseDown"
                                 Watermark="Название...">
                                <Binding Mode="TwoWay" 
                                    Path="LevelsFilter.Name"
                                    UpdateSourceTrigger="PropertyChanged"
                                    NotifyOnValidationError="True"
                                    ValidatesOnExceptions="True">
                                </Binding>
                                <molser:MsTextBox.Style>
                                    <Style TargetType="{x:Type molser:MsTextBox}" BasedOn="{StaticResource StandardMsTextBox}">
                                        <Setter Property="ToolTip" Value="Название"/>
                                        <Style.Triggers>
                                            <Trigger Property="Validation.HasError" Value="true">
                                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </molser:MsTextBox.Style>
                            </molser:MsTextBox>                            
                        </Grid>
                        <!--<StackPanel Margin="0,0,10,0" Orientation="Horizontal"
                                    IsEnabled="{Binding Levels, Converter={StaticResource nullToBoolConverter}}">
                            <Grid >
                                <TextBox x:Name="LevelsFindTextBox" 
                                     Grid.Row="0"
                                     Grid.Column="0"
                                     Width="170"
                                     Height="24"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Center"
                                     ToolTip="Найти">
                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Enter" Command="commands:CustomCommands.Find" CommandParameter="FromLevels"/>
                                    </TextBox.InputBindings>
                                </TextBox>
                                <TextBlock 
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    IsHitTestVisible="False"
                                    Text="Найти..."
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Margin="5,0,0,0"
                                    Foreground="DarkGray">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=Text, ElementName=LevelsFindTextBox}" Value="">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                            <Button DockPanel.Dock="Right"
                                Height="24" Width="30" Margin="0,0,0,0"  
                                ToolTip="Поиск"
                                Command="commands:CustomCommands.Find"
                                CommandParameter="FromLevels"
                                Content="{StaticResource FindCanvas}">
                            </Button>
                        </StackPanel>-->
                        <Button   HorizontalAlignment="Left"
                                    Margin="0,0,10,0"
                                    Height="24" Width="30"   
                                    Command="{Binding ShowPersonsViewCommand}" 
                                    CommandParameter="FromLevels"
                                    ToolTip="Показать сотрудников" ToolTipService.ShowOnDisabled="True"
                                    Content="{StaticResource PersonCanvas}">
                        </Button>
                        <Button Margin="0,0,10,0"
                            HorizontalAlignment="Left"
                            Height="24" Width="30" 
                            Command="{Binding ShowAccessPointsViewCommand}"
                            CommandParameter="FromLevels"
                            ToolTip="Показать точки доступа" ToolTipService.ShowOnDisabled="True"
                            Content="{StaticResource AccessPointCanvas}">
                        </Button>
                        <Button Margin="0,0,10,0"
                            HorizontalAlignment="Left"
                            Height="24" Width="30" 
                            Command="{Binding ShowLevelViewCommand}"
                            CommandParameter="FromLevels"
                            ToolTip="Peдактировать уровень доступа" ToolTipService.ShowOnDisabled="True"
                            Content="{StaticResource EditCanvas}"
                            Visibility="{Binding UserIsSecurityAdmin, Converter={StaticResource boolToUIVisibilityConverter}}">
                        </Button>
                    </StackPanel>
                    <DataGrid x:Name="levelsDataGrid" 
                              Grid.Row="1"
                              Margin="0,10,0,0"
                              ItemsSource="{Binding Levels, NotifyOnTargetUpdated=True}"
                              SelectedItem="{Binding CurrentLevel}"
                              VerticalAlignment="Top"
                              AutoGenerateColumns="False"
                              Visibility="{Binding Levels, Converter={StaticResource nullToVisibilityConverter}}" 
                              GridLinesVisibility="Horizontal"
                              HorizontalGridLinesBrush="{StaticResource DataGridLinesBrush}"
                              LoadingRow="levelsDataGrid_LoadingRow" 
                              CanUserResizeRows="False"
                              IsReadOnly="True"
                              HeadersVisibility="All"
                              SelectionMode="Single"
                              SelectionUnit="FullRow"
                              IsTextSearchEnabled="True"
                              TextSearch.TextPath="Description" Grid.ColumnSpan="2"
                              TargetUpdated="levelsDataGrid_TargetUpdated"
                              >
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Название" Binding="{Binding Path=Name}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Описание" Binding="{Binding Path=Description}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Тип" Binding="{Binding Path=Type}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="ID" Binding="{Binding Path=Id}" IsReadOnly="True" Width="*"/>
                        </DataGrid.Columns>
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Показать сотрудников"
                                    Command="{Binding ShowPersonsViewCommand}" 
                                    CommandParameter="FromLevels">
                                    <MenuItem.Icon>
                                        <ContentControl Height="15" Width="15" Content="{StaticResource PersonCanvas}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Показать точки доступа"
                                    Command="{Binding ShowAccessPointsViewCommand}"
                                    CommandParameter="FromLevels">
                                    <MenuItem.Icon>
                                        <ContentControl Height="15" Width="15" Content="{StaticResource AccessPointCanvas}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Редактировать"
                                    Command="{Binding ShowLevelViewCommand}"
                                    CommandParameter="FromLevels">
                                    <MenuItem.Icon>
                                        <ContentControl Height="15" Width="15" Content="{StaticResource EditCanvas}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Command="Copy"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell" BasedOn="{StaticResource StandardDataGridCell}">
                                <!--<Setter Property="Background" Value="Orange"></Setter>-->
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Type}" Value="основной">
                                        <Setter Property="Foreground" Value="Green"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Type}" Value="дополнительный">
                                        <Setter Property="Foreground" Value="Crimson"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Type}" Value="авк">
                                        <Setter Property="Foreground" Value="Blue"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem x:Name="Notifications">
                <TabItem.Visibility>
                    <MultiBinding Converter="{StaticResource boolToUIVisibilityMultiConverter}">
                        <Binding Mode="OneWay" Path="IsIidkEnabled"/>
                        <Binding Mode="OneWay" Path="UserPermissions[SeeNotifications]"/>
                    </MultiBinding>
                </TabItem.Visibility>
                <TabItem.Header>
                    <Grid Margin="-7,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Ellipse x:Name="alarmIndicator" 
                                 Visibility="Hidden" 
                                 Height="10" 
                                 Width="10" 
                                 Fill="OrangeRed"/>
                        <Viewbox x:Name="alarmIndicator2" 
                                 Height="16" Width="16" 
                                 HorizontalAlignment="Center" 
                                 VerticalAlignment="Center">
                            <Grid>
                                <Ellipse  Fill="{Binding Path=Fill, ElementName=alarmIndicator}" 
                                           Height="16" Width="16">
                                    <Ellipse.OpacityMask>
                                        <RadialGradientBrush RadiusX="1" RadiusY="1">
                                            <GradientStop Color="Yellow" Offset="0" />
                                            <GradientStop Color="Transparent" Offset="1" />
                                        </RadialGradientBrush>
                                    </Ellipse.OpacityMask>
                                </Ellipse>
                            </Grid>
                            <Viewbox.Style>
                                <Style TargetType="Viewbox">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding NotificationsManager.IsAlarming}" Value="false">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Viewbox.Style>
                        </Viewbox >

                        <Viewbox x:Name="alarmIndicator3" 
                                 Height="14" Width="14" 
                                 HorizontalAlignment="Center" 
                                 VerticalAlignment="Center"
                                 Visibility="{Binding NotificationsManager.UnconfirmedCount, 
                                                      Converter={StaticResource intToUIVisibilityConverter}}"                                  
                                 ToolTip="Есть новые оповещения">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <Ellipse Height="14" Width="14"  Fill="OrangeRed"
                                         HorizontalAlignment="Center" 
                                         VerticalAlignment="Center">                                    
                                </Ellipse>
                                <TextBlock Foreground="White" 
                                           Margin="0,1,0,0" 
                                           FontSize="9" FontFamily="Arial" 
                                           Height="11" 
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           Text="{Binding NotificationsManager.UnconfirmedCount,    
                                                        Converter={StaticResource intToStringConverter}}"/>
                            </Grid>
                        </Viewbox>
                        <TextBlock Grid.Column="1" Margin="3,0,0,0" Text="Оповещения"/>
                        <Grid.Triggers>
                            <EventTrigger RoutedEvent="Rectangle.Loaded">
                                <BeginStoryboard>
                                    <Storyboard  RepeatBehavior="Forever">
                                        <ColorAnimation Storyboard.TargetName="alarmIndicator" Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0" BeginTime="0:0:0.500"/>
                                        <ColorAnimation Storyboard.TargetName="alarmIndicator" Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)" To="OrangeRed" Duration="0:0:0" BeginTime="0:0:1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Grid.Triggers>
                    </Grid>
                </TabItem.Header>
                <Grid  Margin="10,10,10,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <!--<ColumnDefinition Width="409*"/>-->
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal">
                        <Button   HorizontalAlignment="Left"
                                    Margin="0,0,10,0"
                                    Height="24" Width="30"   
                                    Command="{Binding AddNotificationsCommand}" 
                                    CommandParameter="FromNotifications"
                                    ToolTip="Добавить оповещения" ToolTipService.ShowOnDisabled="True">
                            <Button.Content>
                                <ContentControl Height="16" Width="20" Content="{StaticResource AddViewbox}"/>
                            </Button.Content>
                        </Button>
                        <Button Margin="0,0,10,0"
                            HorizontalAlignment="Left"
                            Height="24" Width="30" 
                            Command="{Binding RemoveNotificationCommand}"
                            CommandParameter="FromNotifications"
                            ToolTip="Удалить оповещение" ToolTipService.ShowOnDisabled="True">
                            <Button.Content>
                                <ContentControl Height="16" Width="16" Content="{StaticResource DeleteViewbox}"/>
                            </Button.Content>
                        </Button>
                        <Button Margin="0,0,10,0"
                            HorizontalAlignment="Left"
                            Height="24" Width="30" 
                            Command="{Binding RemoveAllNotificationsCommand}"
                            CommandParameter="FromNotifications"
                            ToolTip="Удалить все оповещения" ToolTipService.ShowOnDisabled="True">
                            <Button.Content>
                                <ContentControl Height="15" Width="17" Content="{StaticResource RecycleViewbox}"/>
                            </Button.Content>
                        </Button>
                        <Button Margin="0,0,10,0"
                            HorizontalAlignment="Left"
                            Height="24" Width="30" 
                            Command="{Binding ExportNotificationsCommand}"
                            CommandParameter="FromNotifications"
                            ToolTip="Сохранить оповещения" ToolTipService.ShowOnDisabled="True">
                            <Button.Content>
                                <ContentControl Width="18" Content="{StaticResource UploadViewbox}"/>
                            </Button.Content>
                        </Button>
                        <Button Margin="0,0,10,0"
                            HorizontalAlignment="Left"
                            Height="24" Width="30" 
                            Command="{Binding ImportNotificationsCommand}"
                            CommandParameter="FromNotifications"
                            ToolTip="Загрузить оповещения" ToolTipService.ShowOnDisabled="True">
                            <Button.Content>
                                <ContentControl Width="18" Content="{StaticResource DownloadViewbox}"/>
                            </Button.Content>
                        </Button>
                        <Button Margin="0,0,10,0"
                            HorizontalAlignment="Left"
                            Height="24" Width="30" 
                            Command="{Binding ConfirmAllNotificationsCommand}"
                            CommandParameter="FromNotifications"
                            ToolTip="Подтвердить все тревоги" ToolTipService.ShowOnDisabled="True">
                            <Button.Content>
                                <ContentControl Height="15" Width="17" Content="{StaticResource CheckAllViewbox}"/>
                            </Button.Content>
                        </Button>
                        <!--<Label Margin="10,0,0,0" Content="Не подтверждено:"/>
                        <TextBlock Text="{Binding NotificationsManager.UnconfirmedCount}"/>
                        <Label Margin="10,0,0,0" Content="Тревога:"/>
                        <TextBlock Text="{Binding NotificationsManager.AlarmedCount}"/>-->
                    </StackPanel>
                    <DataGrid x:Name="notificationsDataGrid" 
                              Grid.Row="1"
                              Margin="0,10,0,0"
                              ItemsSource="{Binding NotificationsManager.Notifications, NotifyOnTargetUpdated=True}"
                              VerticalAlignment="Top"
                              AutoGenerateColumns="False"
                              Visibility="{Binding NotificationsManager.Notifications, Converter={StaticResource nullToVisibilityConverter}}" 
                              SelectedItem="{Binding CurrentNotification}"
                              GridLinesVisibility="Horizontal"
                              HorizontalGridLinesBrush="{StaticResource DataGridLinesBrush}"
                              LoadingRow="dataGrid_LoadingRow" 
                              CanUserResizeRows="False"
                              IsReadOnly="True"
                              HeadersVisibility="All"
                              SelectionMode="Single"
                              SelectionUnit="FullRow"
                              IsTextSearchEnabled="True"
                              TextSearch.TextPath="sourceName"
                              TargetUpdated="notificationsDataGrid_TargetUpdated"
                              >
                        <!--<DataGrid.ItemContainerStyle>
                            <Style TargetType="DataGridRow" BasedOn="{StaticResource StandardDataGridRow}">                                
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsAlarming}" Value="true">                                        
                                        <DataTrigger.Setters>
                                            <Setter Property="Background" Value="{Binding Fill, ElementName=alarmIndicator}"/>
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.ItemContainerStyle>-->
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="Управление" IsReadOnly="False" CanUserSort="True" SortMemberPath="IsDisabled">
                                <DataGridTemplateColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>                                            
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.HeaderTemplate>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">                                            
                                            <ToggleButton Margin="5,0,0,0" Height="14"
                                                          IsChecked="{Binding Path=IsDisabled, Mode=OneWay}"
                                                          PreviewMouseLeftButtonDown="Notification_Click"
                                                          ClickMode="Press">
                                                <ToggleButton.Style>
                                                    <Style TargetType="ToggleButton" BasedOn="{StaticResource LightbulbToggleButton}">
                                                        <Setter Property="ToolTip" Value="Тревога включена"/>
                                                        <Setter  Property="Foreground"  Value="Gold"/>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Setter Property="ToolTip" Value="Тревога отключена" />
                                                                <Setter  Property="Foreground"  Value="White"/>
                                                            </Trigger>
                                                            <DataTrigger Binding="{Binding IsUnconfirmed}" Value="true">
                                                                <DataTrigger.Setters>
                                                                    <Setter  Property="Foreground"  Value="OrangeRed"/>
                                                                </DataTrigger.Setters>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsAlarming}" Value="true">
                                                                <DataTrigger.Setters>
                                                                    <Setter  Property="Foreground"  Value="{Binding Fill, ElementName=alarmIndicator}"/>
                                                                </DataTrigger.Setters>
                                                            </DataTrigger>                                                            
                                                        </Style.Triggers>
                                                    </Style>
                                                </ToggleButton.Style>
                                            </ToggleButton>
                                            <!--<Button Click="ConfirmNotification_Click" Width="10" Height="10" Margin="10,0,0,0">
                                                <Button.Style>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Viewbox>
                                                                        <Ellipse x:Name="unconfirmedIndicator" Width="12" Height="12"
                                                                                 Stroke="Black" StrokeThickness="0.2"
                                                                                 Fill="OrangeRed"/>
                                                                    </Viewbox>
                                                                    <ControlTemplate.Triggers>
                                                                        <DataTrigger Binding="{Binding IsAlarming}" Value="true">
                                                                            <DataTrigger.Setters>
                                                                                <Setter TargetName="unconfirmedIndicator" Property="Fill"  Value="{Binding Fill, ElementName=alarmIndicator}"/>
                                                                            </DataTrigger.Setters>
                                                                        </DataTrigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                        <Setter Property="ToolTip" Value="Подтвердить тревогу"/>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Cursor" Value="Hand"/>
                                                            </Trigger>                                                            
                                                            <DataTrigger Binding="{Binding IsUnconfirmed}" Value="false">
                                                                <Setter Property="Visibility" Value="Hidden"/>
                                                                <Setter Property="ToolTip" Value="Нет тревог"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>-->
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Имя" Binding="{Binding Path=Name}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <!--<DataGridTextColumn Header="Дата" Binding="{Binding Path=Date, Converter={StaticResource dateToStringConverter}, StringFormat=\{0:dd.MM.yy HH:mm:ss\}}"/>-->
                            <DataGridTemplateColumn Header="Дата" CanUserSort="True" SortMemberPath="Date"
                                                    ClipboardContentBinding="{Binding Date}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <TextBlock Text="{Binding Path=Date, Converter={StaticResource dateToStringConverter}, StringFormat=\{0:dd.MM.yy HH:mm:ss\}}"/>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Информация" Binding="{Binding Path=Information}" IsReadOnly="True" Width="*">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Показать информацию"
                                     Command="{Binding ShowInfoCommand}">
                                    <MenuItem.Icon>
                                        <ContentControl Height="16" Width="16"                                                        
                                                        Content="{StaticResource InfoViewbox}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Показать объект на карте"
                                    Command="{Binding IidkShowObjectOnMapCommand}">
                                    <MenuItem.Visibility>
                                        <MultiBinding Mode="OneWay" Converter="{StaticResource boolToUIVisibilityMultiConverter}">
                                            <Binding Mode="OneWay" Path="IsIidkEnabled" />
                                            <Binding Mode="OneWay" Path="Settings.IidkMap" Converter="{StaticResource stringToBoolConverter}"/>
                                        </MultiBinding>
                                    </MenuItem.Visibility>
                                    <MenuItem.Icon>
                                        <ContentControl Height="15" Width="20" Content="{StaticResource LocationViewbox}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Показать событие на камере"
                                    Command="{Binding IidkShowEventOnCamCommand}">
                                    <MenuItem.Visibility>
                                        <MultiBinding Mode="OneWay" Converter="{StaticResource boolToUIVisibilityMultiConverter}">
                                            <Binding Mode="OneWay" Path="IsIidkEnabled" />
                                            <Binding Mode="OneWay" Path="Settings.AppSettings.IidkMonitor" Converter="{StaticResource stringToBoolConverter}"/>
                                        </MultiBinding>
                                    </MenuItem.Visibility>
                                    <MenuItem.Icon>
                                        <ContentControl Height="17" Width="17" Content="{StaticResource ShowOnCamViewbox}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Копировать" Command="Copy"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.InputBindings>
                            <MouseBinding Gesture="LeftDoubleClick" 
                                          Command="{Binding ShowInfoCommand}"/>
                        </DataGrid.InputBindings>
                    </DataGrid>
                </Grid>
            </TabItem>
        </TabControl>
    </DockPanel>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo x:Name="taskBarItemInfo" 
                         ProgressState="{Binding NotificationsManager.UnconfirmedCount, Converter={StaticResource alarmToProgressStateConverter}}" 
                         ProgressValue="{Binding NotificationsManager.UnconfirmedCount, Converter={StaticResource alarmToProgressValueConverter}}">
        </TaskbarItemInfo>
    </Window.TaskbarItemInfo>
</Window>
